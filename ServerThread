//operating system.
package os;

import java.net.Socket;
import java.io.*;

public class ServerThread extends Thread {

	Socket myConnection;
	ObjectOutputStream out;
	ObjectInputStream in;
	String message;
	int sum; // linked to requester
	int sumMultiply;

	public ServerThread(Socket s) {
		myConnection = s;
	}

	public void run() {
		try {
			out = new ObjectOutputStream(myConnection.getOutputStream());
			out.flush();
			in = new ObjectInputStream(myConnection.getInputStream());

			// Server Comms

			sendMessage("Please enter 1 to ADD or 2 to MULTIPLY");

			while (true) {
				message = (String) in.readObject();
					//this will ensure they are only read when needed
				if (message.equalsIgnoreCase("1") || (message.equalsIgnoreCase("2"))) {

					sendMessage("number entered is; " + message);
					break;
				} else {
					sendMessage("invalid choice, enter 1 or 2");
				}
			}

			if (message.equalsIgnoreCase("1")) {
				sum = (int) in.readObject(); // linked to requester, does not have to be the same variable name to be
				sendAddition(sum);// same method as requester (linked to requester by the method sendAddition)
						// sendMessage("number entered is; "+ message);

			}

			else if (message.equalsIgnoreCase("2")) {
				sumMultiply = (int) in.readObject();
				sendMultiply(sumMultiply);// same method as requester (linked to requester by the method sendMultiply)
				//sendMessage("number entered is; " + message);
			}

			in.close();
			out.close();
		} catch (ClassNotFoundException classnot) {
			System.err.println("Data received in unknown format");
		} catch (IOException e) {

		}

	}

	void sendMessage(String msg) {
		try {
			out.writeObject(msg);
			out.flush();
			System.out.println("server>" + msg);
		} catch (IOException ioException) {
			ioException.printStackTrace();
		}
	}

	void sendAddition(int add) {
		try {
			out.writeObject(add);
			out.flush();
			System.out.println("clientAddition>" + add);
		} catch (IOException ioException) {
			ioException.printStackTrace();
		}
	}

	void sendMultiply(int multiply) {
		try {
			out.writeObject(multiply);
			out.flush();
			System.out.println("clientMultiplication>" + multiply);
		} catch (IOException ioException) {
			ioException.printStackTrace();
		}
	}
}
